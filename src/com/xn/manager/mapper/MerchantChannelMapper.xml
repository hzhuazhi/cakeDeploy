<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xn.manager.dao.MerchantChannelDao">
    <!-- 属性映射 -->
    <resultMap id="dataMap" type="com.xn.manager.model.MerchantChannelModel" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="alias" property="alias" jdbcType="VARCHAR" />
        <result column="merchant_id" property="merchantId" jdbcType="BIGINT" />
        <result column="merchant_site_id" property="merchantSiteId" jdbcType="BIGINT" />
        <result column="channel_id" property="channelId" jdbcType="BIGINT" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="use_status" property="useStatus" jdbcType="BIT" />
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
        <result column="create_role_id" property="createRoleId" jdbcType="BIGINT" />
        <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
        <result column="update_role_id" property="updateRoleId" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="ts_time" property="tsTime" jdbcType="TIMESTAMP" />
        <result column="yn" property="yn" jdbcType="BIT" />
        <result column="alias" property="alias" jdbcType="VARCHAR" />
        <result column="ac_name" property="acName" jdbcType="VARCHAR" />
        <result column="account_num" property="accountNum" jdbcType="VARCHAR" />
    </resultMap>
    <!-- 定义数据库基本列,只适用代替单表的*-->
    <sql id="Base_Column_List">
        b.id, b.alias,  b.use_status, b.create_user_id,
        b.create_role_id, b.update_user_id, b.update_role_id, b.create_time, b.update_time, b.ts_time,
        b.yn
    </sql>


    <sql id="Base_Column_List_Info">
       distinct  a.id,a.alias,a.use_status
    </sql>




    <sql id="Base_Column_List_All">
        b.alias,b.ac_name,b.account_num,a.id
    </sql>

    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        where 1=1
        <trim  suffixOverrides="," >
            <if test="id != 0 and id >0 " >
                and b.id = #{id}
            </if>

            <if test="useStatus != 0 and useStatus > 0 " >
                and b.use_status = #{useStatus}
            </if>
            and b.yn =  0
        </trim>
    </sql>



    <!-- 查询条件_id -->
    <sql id="Example_Where_Clause_id">
        where 1=1
        <trim  suffixOverrides="," >
            <if test="id != 0 and id >0 " >
                and a.id = #{id}
            </if>
            <if test="channelId != 0 and channelId >0 " >
                and a.channel_id = #{channelId}
            </if>
            <if test=" merchantId != 0 and merchantId >0 " >
                and a.merchant_id= #{merchantId}
            </if>
            and a.yn =  0
        </trim>
    </sql>


    <!--<sql id="Example_Where_Clause_Not_Id">-->
        <!--where 1=1-->
        <!--<trim  suffixOverrides="," >-->
            <!--<if test="bankIdList != null and bankIdList.size()>0">-->
                <!--and b.id not in-->
                <!--<foreach item="item" index="index" collection="bankIdList" open="(" separator="," close=")">-->
                    <!--#{item}-->
                <!--</foreach>-->
            <!--</if>-->
            <!--and b.yn =  0-->
        <!--</trim>-->
    <!--</sql>-->


    <!-- 查询所有的数据-->
    <select id="queryByAll" resultMap="dataMap"  parameterType="Object">
        select
        <include refid="Base_Column_List_All"/>
        from tb_fr_merchant_channel a inner JOIN tb_fr_merchant  b
        on  a.merchant_id = b.id
        <include refid="Example_Where_Clause_id"/>
    </select>


    <!-- 查询所有的数据-->
    <select id="queryNotChannelBankAll" resultMap="dataMap"  parameterType="Object">
        select
        <include refid="Base_Column_List_All"/>
        from  tb_fr_merchant_channel b
        <!--<include refid="Example_Where_Clause_Not_Id"/>-->
    </select>


    <!-- 查询总数-->
    <select id="queryByCount" resultType="java.lang.Integer"  parameterType="Object">
        select count(distinct a.id)
        from  tb_fr_channel  a left JOIN
        tb_fr_merchant_channel  b
        on  a.id =b.channel_id
        <include refid="Example_Where_Clause"/>
    </select>

    <!-- 查询分页列表 -->
    <select id="queryByList" resultMap="dataMap"  parameterType="Object">
        select
        <include refid="Base_Column_List_Info" />
        from tb_fr_channel  a left JOIN
        tb_fr_merchant_channel  b
        on  a.id =b.channel_id
        <include refid="Example_Where_Clause"/>
        order by a.create_time desc
        limit #{startIndex},#{pageSize}
    </select>








    <!-- 查询列表-无分页-有条件/有条件 -->
    <select id="queryAllList" resultMap="dataMap"  parameterType="Object">
        select
        <include refid="Base_Column_List" />
        from tb_fr_merchant_channel b
        <include refid="Example_Where_Clause"/>
        order by b.create_time desc
    </select>



    <!-- 查询列表-无分页-有条件/有条件 -->
    <select id="queryisAllList" resultMap="dataMap"  parameterType="Object">
        select
        b.merchant_id
        from tb_fr_merchant_channel b
        <include refid="Example_Where_Clause"/>
        order by b.create_time desc
    </select>


    <!-- 根据id查询记录 -->
    <select id="queryById"  resultMap="dataMap" parameterType="Object">
        select  a.id,a.channel_id,a.bank_id,a.remark,a.create_time
        from tb_fr_merchant_channel a
        where  a.channel_id=#{channelId}
    </select>

    <!-- 根据条件查询记录 -->
    <select id="queryByCondition"  resultMap="dataMap" parameterType="Object">
        select
        <include refid="Base_Column_List" />
        from tb_fr_merchant_channel a
        <include refid="Example_Where_Clause"/>
        limit 1
    </select>

    <!-- 添加记录 -->
    <insert id="add" parameterType="Object" >
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
        insert into tb_fr_merchant_channel
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="alias != null" >
                alias,
            </if>
            <if test="merchantId != null" >
                merchant_id,
            </if>
            <if test="merchantSiteId != null" >
                merchant_site_id,
            </if>
            <if test="channelId != null" >
                channel_id,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="useStatus != null" >
                use_status,
            </if>

            <if test="createUserId != null" >
                create_user_id,
            </if>
            <if test="createRoleId != null" >
                create_role_id,
            </if>
            <if test="updateUserId != null" >
                update_user_id,
            </if>
            <if test="updateRoleId != null" >
                update_role_id,
            </if>
            <if test="linkType != null" >
                link_type,
            </if>
            create_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="alias != null" >
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="merchantId != null" >
                #{merchantId,jdbcType=BIGINT},
            </if>
            <if test="merchantSiteId != null" >
                #{merchantSiteId,jdbcType=BIGINT},
            </if>
            <if test="channelId != null" >
                #{channelId,jdbcType=BIGINT},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="useStatus != null" >
                #{useStatus,jdbcType=BIT},
            </if>
            <if test="createUserId != null" >
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createRoleId != null" >
                #{createRoleId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null" >
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateRoleId != null" >
                #{updateRoleId,jdbcType=BIGINT},
            </if>
            <if test="linkType != null" >
                #{linkType,jdbcType=BIGINT},
            </if>
            <![CDATA[  NOW(), ]]>
        </trim>
    </insert>


    <!-- 更新记录 -->
    <update id="update" parameterType="Object">
        UPDATE tb_fr_merchant_channel a
        <trim prefix="set" suffixOverrides=",">
            <if test="alias != null" >
                alias = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="merchantId != null" >
                merchant_id = #{merchantId,jdbcType=BIGINT},
            </if>
            <if test="merchantSiteId != null" >
                merchant_site_id = #{merchantSiteId,jdbcType=BIGINT},
            </if>
            <if test="channelId != null" >
                channel_id = #{channelId,jdbcType=BIGINT},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="useStatus != null" >
                use_status = #{useStatus,jdbcType=BIT},
            </if>
            <if test="createUserId != null" >
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createRoleId != null" >
                create_role_id = #{createRoleId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null" >
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateRoleId != null" >
                update_role_id = #{updateRoleId,jdbcType=BIGINT},
            </if>
            a.update_time = NOW(),
        </trim>
        where  a.id=#{id}
    </update>


    <!-- 主要作用1.逻辑删除，2更新状态 -->
    <update id="manyOperation" parameterType="Object">
        update tb_fr_merchant_channel a
        <trim prefix="set" suffixOverrides=",">
            <if test="useStatus != 0 and useStatus >0 " >
                a.use_status=#{useStatus},
            </if>
            a.update_time=NOW()
        </trim>
        where  a.id=#{id}
    </update>

    <!--逻辑删除数据 -->
    <update id="delete" parameterType="Object">
        UPDATE tb_fr_merchant_channel a set a.yn = 1, a.update_user_id = #{updateUserId}, a.update_role_id = #{updateRoleId},
        a.update_time = now()
        where 1=1
        and a.id =#{id}
        and a.yn=0
    </update>


</mapper>